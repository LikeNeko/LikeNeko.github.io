<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CocosCreater中iOS端调用js端报找不到方法的error</title>
    <url>/2020/04/23/Cocos%20Creater%20jsb%E8%B0%83%E7%94%A8%E6%89%BE%E4%B8%8D%E5%88%B0%E6%96%B9%E6%B3%95%E7%9A%84%E9%97%AE%E9%A2%98%5Bok%5D/</url>
    <content><![CDATA[<blockquote>
<p>错误示范</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">if</span> (cc.sys.isNative &amp;&amp; cc.sys.os == cc.sys.OS_IOS) &#123;</span><br><span class="line">    jsb.reflection.callStaticMethod(<span class="string">"ADVideo"</span>, <span class="string">"loadAdWithType:"</span>, <span class="string">"2"</span>);</span><br><span class="line">    <span class="comment">// ios端回调走这个方法，但报错，找不到that.tj2</span></span><br><span class="line">    cc.jsVideoDidClick2 = <span class="function"><span class="keyword">function</span> (<span class="params">type</span>) </span>&#123;</span><br><span class="line">        inter.tonji(<span class="number">2</span>, that, that.tj2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<a id="more"></a>




<blockquote>
<p>正确示范</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> (cc.sys.isNative &amp;&amp; cc.sys.os == cc.sys.OS_IOS) &#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">    jsb.reflection.callStaticMethod(<span class="string">"ADVideo"</span>, <span class="string">"loadAdWithType:"</span>, <span class="string">"2"</span>);</span><br><span class="line">    <span class="comment">// ios端回调走这个方法，that得放在if里面</span></span><br><span class="line">    cc.jsVideoDidClick2 = <span class="function"><span class="keyword">function</span> (<span class="params">type</span>) </span>&#123;</span><br><span class="line">        inter.tonji(<span class="number">2</span>, that, that.tj2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Cocos Creater</tag>
      </tags>
  </entry>
  <entry>
    <title>php生成邀请码的方案</title>
    <url>/2020/04/20/Php%E7%94%9F%E6%88%90%E9%82%80%E8%AF%B7%E7%A0%81%E6%96%B9%E6%A1%88%E6%80%9D%E8%B7%AF%5Bok%5D/</url>
    <content><![CDATA[<p>总结一下创建一个邀请码的方案</p>
<a id="more"></a>



<blockquote>
<p>方案1</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">function createCode($userId)</span><br><span class="line">&#123;</span><br><span class="line">    static $sourceString &#x3D; [</span><br><span class="line">              0,1,2,3,4,5,6,7,8,9,10,</span><br><span class="line">              &#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;,&#39;f&#39;,</span><br><span class="line">              &#39;g&#39;,&#39;h&#39;,&#39;i&#39;,&#39;j&#39;,&#39;k&#39;,&#39;l&#39;,</span><br><span class="line">              &#39;m&#39;,&#39;n&#39;,&#39;o&#39;,&#39;p&#39;,&#39;q&#39;,&#39;r&#39;,</span><br><span class="line">              &#39;s&#39;,&#39;t&#39;,&#39;u&#39;,&#39;v&#39;,&#39;w&#39;,&#39;x&#39;,</span><br><span class="line">              &#39;y&#39;,&#39;z&#39;</span><br><span class="line">            ];</span><br><span class="line"> </span><br><span class="line">    $num &#x3D; $userId;</span><br><span class="line">    $code &#x3D; &#39;&#39;;</span><br><span class="line">    while($num)</span><br><span class="line">    &#123;</span><br><span class="line">        $mod &#x3D; $num % 36;</span><br><span class="line">        $num &#x3D; (int)($num &#x2F; 36);</span><br><span class="line">        $code &#x3D; &quot;&#123;$sourceString[$mod]&#125;&#123;$code&#125;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;判断code的长度</span><br><span class="line">    if( empty($code[4]))</span><br><span class="line">        str_pad($code,5,&#39;0&#39;,STR_PAD_LEFT);</span><br><span class="line"> </span><br><span class="line">    return $code;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>来自:<a href="https://blog.csdn.net/qq_33563706/java/article/details/51897558" target="_blank" rel="noopener">csdn的博客</a></p>
<blockquote>
<p>方案1的升级版</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">static function encode($user_id) &#123;</span><br><span class="line"></span><br><span class="line">        static $source_string &#x3D; &#39;E5FCDG3HQA4B1NOPIJ2RSTUV67MWX89KLYZ&#39;;</span><br><span class="line"></span><br><span class="line">        $num &#x3D; $user_id;</span><br><span class="line"></span><br><span class="line">        $code &#x3D; &#39;&#39;;</span><br><span class="line"></span><br><span class="line">        while ( $num &gt; 0) &#123;</span><br><span class="line"></span><br><span class="line">            $mod &#x3D; $num % 35;</span><br><span class="line"></span><br><span class="line">            $num &#x3D; ($num - $mod) &#x2F; 35;</span><br><span class="line"></span><br><span class="line">            $code &#x3D; $source_string[$mod].$code;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(empty($code[3]))</span><br><span class="line"></span><br><span class="line">            $code &#x3D; str_pad($code,4,&#39;0&#39;,STR_PAD_LEFT);</span><br><span class="line"></span><br><span class="line">        return $code;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    static function decode($code) &#123;</span><br><span class="line"></span><br><span class="line">        static $source_string &#x3D; &#39;E5FCDG3HQA4B1NOPIJ2RSTUV67MWX89KLYZ&#39;;</span><br><span class="line"></span><br><span class="line">        if (strrpos($code, &#39;0&#39;) !&#x3D;&#x3D; false)</span><br><span class="line"></span><br><span class="line">            $code &#x3D; substr($code, strrpos($code, &#39;0&#39;)+1);</span><br><span class="line"></span><br><span class="line">        $len &#x3D; strlen($code);</span><br><span class="line"></span><br><span class="line">        $code &#x3D; strrev($code);</span><br><span class="line"></span><br><span class="line">        $num &#x3D; 0;</span><br><span class="line"></span><br><span class="line">        for ($i&#x3D;0; $i &lt; $len; $i++) &#123;</span><br><span class="line"></span><br><span class="line">            $num +&#x3D; strpos($source_string, $code[$i]) * pow(35, $i);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return $num;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>cocosjs 与ios交互的知识点</title>
    <url>/2020/04/23/cocos%20js%20%E4%B8%8EiOS%20%E4%BA%A4%E4%BA%92%5Bok%5D/</url>
    <content><![CDATA[<h2 id="拉起穿山甲"><a href="#拉起穿山甲" class="headerlink" title="拉起穿山甲"></a>拉起穿山甲</h2><p>普通的.h,.m文件是不行能交互到cocos的sdk的。</p>
<p>涉及到 .m和.mm的区别。</p>
<p><code>.m</code> 文件是纯 <code>Object-C</code> 文件<br> <code>.mm</code> 是 <code>Object-C</code> 和 <code>C++</code> 混合文件；</p>
<p><code>.m</code>只能调用纯 <code>Object-C</code> 的类，不能调用混合的</p>
<p> <code>.mm</code> 可以调用 <code>Object-C</code> 的，也可以调用 <code>C++</code> 的；</p>
<h2 id="m-要调用混合的怎么办？"><a href="#m-要调用混合的怎么办？" class="headerlink" title=".m 要调用混合的怎么办？"></a>.m 要调用混合的怎么办？</h2><p> 可以解决办法是 <code>.h</code> 用 <code>Object-C</code> 的方式，而具体实现用 <code>.mm</code> 的方式；</p>
<p>解释一下，就是在.mm文件里你可以用oc的语法也可以用c++的语法</p>
]]></content>
      <tags>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>ios审核[ok]</title>
    <url>/2020/04/23/ios%E5%AE%A1%E6%A0%B8%5Bok%5D/</url>
    <content><![CDATA[<h1 id="方案1"><a href="#方案1" class="headerlink" title="方案1"></a>方案1</h1><p>使用博客，从网页中获取某个标签然后判断这个标签隐藏</p>
<blockquote>
<p>核心-&gt;blog 网页</p>
</blockquote>
<blockquote>
<p>来源 <a href="https://www.jianshu.com/p/0c6864055703" target="_blank" rel="noopener">https://www.jianshu.com/p/0c6864055703</a></p>
</blockquote>
<a id="more"></a>



<h1 id="方案2"><a href="#方案2" class="headerlink" title="方案2"></a>方案2</h1><p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-04-07-040154.png?x-oss-process=style/shuiyin" alt="image-20200407120153630"></p>
<p>代码命名规范</p>
<blockquote>
<p>来源: <a href="https://blog.csdn.net/kun__kun/article/details/89466477" target="_blank" rel="noopener">https://blog.csdn.net/kun__kun/article/details/89466477</a></p>
</blockquote>
<h1 id="方案3"><a href="#方案3" class="headerlink" title="方案3"></a>方案3</h1><p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-04-07-041121.png?x-oss-process=style/shuiyin" alt="image-20200407121120680"></p>
<p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-04-07-041224.png?x-oss-process=style/shuiyin" alt="image-20200407121223576"></p>
<h1 id="方案4"><a href="#方案4" class="headerlink" title="方案4"></a>方案4</h1><p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-04-07-063453.png?x-oss-process=style/shuiyin" alt="image-20200407143452555"></p>
<blockquote>
<p>来源 <a href="https://www.zhihu.com/question/351008255" target="_blank" rel="noopener">https://www.zhihu.com/question/351008255</a></p>
</blockquote>
<h1 id="方案5"><a href="#方案5" class="headerlink" title="方案5"></a>方案5</h1><p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-04-07-080900.png?x-oss-process=style/shuiyin" alt="image-20200407160859782"></p>
<p>quick预审</p>
<p>他们这个ios机审预检测还是可以看一下的,每个可能被拒原因都有案例</p>
<blockquote>
<p>链接:<a href="https://www.quicksdk.com/" target="_blank" rel="noopener">https://www.quicksdk.com/</a></p>
</blockquote>
<h1 id="方案6"><a href="#方案6" class="headerlink" title="方案6"></a>方案6</h1><p>跟钱有关的，提现页面</p>
<p>个人觉得是不是可以考虑换成h5页面，然后点击某个按钮打开h5去提现。</p>
<p>毕竟隐藏一个UI界面来讲，一个按钮应该还好</p>
<p>不过这个测试可以放在，某个app通过之后测试。</p>
<h1 id="方案7"><a href="#方案7" class="headerlink" title="方案7"></a>方案7</h1><p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-04-07-085424.png?x-oss-process=style/shuiyin" alt="image-20200407165423727"></p>
<p>准备在某个无隐藏版本过了后试一下。</p>
<p>录个视频，备注写详细，某些地方balabala的，通过备注，和视频向苹果那边回复，自己这边明确没有隐藏。</p>
<p>个人猜测，可能苹果那边不太明白咱们的app然后就感觉你这app怪怪的就拒了。录个完整视频也许会有点效果。针对小果园，养鸡，这些app。</p>
<p>在移除掉隐藏功能之后还是被拒是不是可以去申诉一下？我觉得这有点像被机审拒了。</p>
<p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-04-07-090125.png?x-oss-process=style/shuiyin" alt="image-20200407170125303"></p>
<p>还有,貌似可以确定的是<strong>审核人员一定在美国</strong>了。看知乎上说的，国内的审核好像只是负责传话。</p>
<p>苹果好像对审核把控的很严，只在美国审核。</p>
<p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-04-07-090936.jpg?x-oss-process=style/shuiyin" alt="image-20200407170758079"></p>
<p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-04-07-093226.png?x-oss-process=style/shuiyin" alt="image-20200407173226398"></p>
<p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-04-07-090913.png?x-oss-process=style/shuiyin" alt="image-20200407170913403"></p>
<p>下面这个连接都有说。</p>
<blockquote>
<p>来源:<a href="https://zhuanlan.zhihu.com/p/38181527" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/38181527</a></p>
</blockquote>
<h1 id="方案8"><a href="#方案8" class="headerlink" title="方案8"></a>方案8</h1><p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-04-07-091307.png?x-oss-process=style/shuiyin" alt="image-20200407171306815"></p>
<p>尽量把能说明的都说明了。某些sdk的关键词，比如友盟有webview。之类的。</p>
<blockquote>
<p>来源:<a href="https://forum.cocos.org/t/ios/81504/19" target="_blank" rel="noopener">https://forum.cocos.org/t/ios/81504/19</a></p>
</blockquote>
<p>#方案9</p>
<p>愤怒的飞刀被拒之前加入了广点通，而广点通的sdk里刚好有敏感词，这里等待这次(4.7日)审核结果。</p>
<p>如果被拒绝，回复邮件：说明广点通sdk，不包含支付宝，不包含热更新。</p>
<p>以上是我现在找到的所有资料了。</p>
<p>极光合规政策:<a href="http://docs.jiguang.cn/compliance_guide/compliance_and_security_policy_interpretation/compliance_and_security_policy_interpretation/" target="_blank" rel="noopener">http://docs.jiguang.cn/compliance_guide/compliance_and_security_policy_interpretation/compliance_and_security_policy_interpretation/</a></p>
<h1 id="方案10"><a href="#方案10" class="headerlink" title="方案10"></a>方案10</h1><p>项目内参数判断，如，排行榜第一名，某个数据是n，如果为n，则骗审</p>
<p>金额判断:当金币大于n，则显示提现</p>
<h1 id="方案11"><a href="#方案11" class="headerlink" title="方案11"></a>方案11</h1><p>尝试性修改提审时的备注信息，文案一定要怂，别硬刚，把审核当客户，教他。如果确定没隐藏，则晓之以情动之以理。</p>
<p>ps:个人经验，苹果那边好像隐藏管的不是很严，隐藏或<strong>营销</strong>营销应该才是重头。</p>
]]></content>
  </entry>
  <entry>
    <title>mac 拖动应用程序秒切桌面的方法</title>
    <url>/2020/04/23/mac%E6%8B%96%E5%8A%A8%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%A7%92%E5%88%87%5Bok%5D/</url>
    <content><![CDATA[<p>Mac系统有一大优势，就是在一台电脑上面，可以设定出很多桌面空间使用，这样我们的桌面就不会很凌乱，像MacGG一般都会用到4个桌面空间。在使用桌面空间的时候，大家可能都会用到一个功能，就是我要移动一个窗口到另一个桌面空间，都会把窗口拖到屏幕右边停留几秒，就回自动的切换到下一个桌面空间。今天MacGG给大家介绍一个方法，可以秒切哈。</p>
<p>什么是秒切，就是你拖动窗口到屏幕边缘，无需停留，就自动切到下一桌面空间。</p>
<p>首先打开“终端”（Finder-&gt;应用程序-&gt;实用工具-&gt;终端），并且输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.dock workspaces-edge-delay -float 0;killall Dock</span><br></pre></td></tr></table></figure>

<p>现在大家试一下秒切吧。哈哈。。很爽不。是不是太快了，如果觉得太快，我们还可以在改改设定，我就设定在屏幕边缘停留半秒切换吧。<br>再次打开“终端”（Finder-&gt;应用程序-&gt;实用工具-&gt;终端），并且输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.dock workspaces-edge-delay -float 0.15;killall Dock</span><br></pre></td></tr></table></figure>

<p>如果你想还原成原样，也很简单，再次打开“终端”（Finder-&gt;应用程序-&gt;实用工具-&gt;终端），并且输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaults delete com.apple.dock workspaces-edge-delay;killall Dock</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql 5.7 分组group by 查询报错 only_full_group_by</title>
    <url>/2020/04/23/mysql5.7%E5%88%86%E7%BB%84group%20by%20%E6%9F%A5%E8%AF%A2%E6%8A%A5%E9%94%99only_full_group_by%5Bok%5D/</url>
    <content><![CDATA[<h2 id="实践解决"><a href="#实践解决" class="headerlink" title="实践解决"></a>实践解决</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 统计当天综合</span><br><span class="line">$time &#x3D; strtotime(date(&#39;Y-m-d&#39;));</span><br><span class="line">$sql &#x3D; &lt;&lt;&lt;EOT</span><br><span class="line">select </span><br><span class="line">sum(uv) as uv,</span><br><span class="line">sum(accredit) as accredit,</span><br><span class="line">sum(new_video) as new_video,</span><br><span class="line">sum(old_video) as old_video,</span><br><span class="line">sum(share) as share,</span><br><span class="line">sum(day_all_uv) as day_all_uv,</span><br><span class="line">&#96;time&#96;,</span><br><span class="line">any_value(channel_name) as channel_name,</span><br><span class="line">any_value(channel_app) as channel_app,</span><br><span class="line">any_value(channel_id) as channel_id</span><br><span class="line"></span><br><span class="line">from channel.xcx_channel_count</span><br><span class="line">where &#96;time&#96; &#x3D; $time </span><br><span class="line">group by channel_id</span><br><span class="line">EOT;</span><br><span class="line">&#x2F;&#x2F; $obj-&gt;query(&#39;SET sql_mode&#x3D;(SELECT REPLACE(@@sql_mode,\&#39;ONLY_FULL_GROUP_BY\&#39;,\&#39;\&#39;));&#39;); &#x2F;&#x2F;加上any_value之后不用这句了否则就要加上这句</span><br><span class="line">$info &#x3D; $obj-&gt;query($sql);</span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.聚合函数不会触发<code>only_full_group_by</code><br>2.加<code>any_value()</code>的参数不会触发<code>only_full_group_by</code><br>3.Mysql配置文件删除<code>only_full_group_by</code>或者出错代码前执行取消设置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SET sql_mode&#x3D;(SELECT REPLACE(@@sql_mode,&#39;ONLY_FULL_GROUP_BY&#39;,&#39;&#39;));</span><br></pre></td></tr></table></figure>

<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p><a href="https://www.cnblogs.com/kenshinobiy/p/9580701.html" target="_blank" rel="noopener">MYSQL5.7版本sql_mode=only_full_group_by问题</a></p>
]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>一个消息推送平台的架构</title>
    <url>/2020/04/23/%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%5Bok%5D/</url>
    <content><![CDATA[<p>app:</p>
<p>1.链接-定时刷新/socket方案/友盟信鸽之类的第三方</p>
<p>2.通知-后台存活的情况下推送消息</p>
<p>3.记录-记录所有的汇报，保存在数据库中，每次app打开的时候提示</p>
<p>4.图表-用图显示汇报</p>
<p>server:</p>
<p>1.存储记录</p>
<p>2.转发信息</p>
<p>3.被动收集信息</p>
<p>4.主动收集信息</p>
<p>延伸：某些记录过多则报异常-根据异常等级 通知</p>
<p>sdk:</p>
<p>1.发送信息到server</p>
<p>server:</p>
<p>记录表</p>
<p>Id，类型，产生时间，标题，内容，来自哪里</p>
<p>服务端：</p>
<p>sdk:</p>
<p>推送消息，需要各种message类。</p>
<p>iOS端：</p>
<p>sdk：</p>
<blockquote>
<p>信息包括</p>
</blockquote>
<p>每小时多少条各种类型的数据</p>
<p>当前n分钟内，那种类型的数据最多</p>
<p>每个类型的数据，每小时条数表格</p>
<p>警告级别的数据展示</p>
]]></content>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>关于服务器被扫描攻击这件事我的应对措施</title>
    <url>/2020/04/23/%E5%85%B3%E4%BA%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A2%AB%E6%89%AB%E6%8F%8F%E6%94%BB%E5%87%BB%E8%BF%99%E4%BB%B6%E4%BA%8B%E6%88%91%E7%9A%84%E5%BA%94%E5%AF%B9%E6%8E%AA%E6%96%BD%5Bok%5D/</url>
    <content><![CDATA[<h2 id="关于服务器被扫描攻击这件事我的应对措施"><a href="#关于服务器被扫描攻击这件事我的应对措施" class="headerlink" title="关于服务器被扫描攻击这件事我的应对措施"></a>关于服务器被扫描攻击这件事我的应对措施</h2><p>贴张图吧….</p>
<p><img data-src="http://nekoya.oss-cn-beijing.aliyuncs.com/blog/9mpoz.png" alt="image-20190928205811239"></p>
<a id="more"></a>



<p>该怎么说？这种现象其实很早就有了，猫也懒得管这件事，因为这种扫描..感觉很弱智啊！</p>
<p>首先给那些脚本脚本小子建议：</p>
<p>1.麻烦那些脚本小子升级一下爆破库在来扫啦！</p>
<p>2.我这个小破站经不起这么高频的请求啦！</p>
<p>3.请大佬高抬贵手放过这只残破的猫窝吧！</p>
<p>说起来…我这个小破站至于吗？（手动滑稽）</p>
<p>##ip访问限制方法</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span> default;</span><br><span class="line">  <span class="attribute">server_name</span> _;</span><br><span class="line">  <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> <a href="https://www.cnblogs.com/weifeng1463/p/9197971.html" target="_blank" rel="noopener">nginx只允许域名访问，禁止ip访问</a></p>
<h2 id="ip请求频率限制方法"><a href="#ip请求频率限制方法" class="headerlink" title="ip请求频率限制方法"></a>ip请求频率限制方法</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置</span></span><br><span class="line"><span class="attribute">limit_req_zone</span> <span class="variable">$binary_remote_addr</span> zone=allips:<span class="number">10m</span> rate=1r/s;</span><br><span class="line">server&#123;</span><br><span class="line">		...</span><br><span class="line">    <span class="comment"># 加这一行调用</span></span><br><span class="line">    <span class="attribute">limit_req</span> zone=allips burst=<span class="number">5</span> nodelay;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">    ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> <a href="https://www.cnblogs.com/jnhs/p/10740500.html" target="_blank" rel="noopener">nginx 限制ip的请求频率</a></p>
<h2 id="禁止ssh账号密码登录开启key登录"><a href="#禁止ssh账号密码登录开启key登录" class="headerlink" title="禁止ssh账号密码登录开启key登录"></a>禁止ssh账号密码登录开启key登录</h2><p><code>[root@neko ~]# ssh-keygen -t rsa</code></p>
]]></content>
      <tags>
        <tag>网络攻击</tag>
      </tags>
  </entry>
  <entry>
    <title>关于ssh链接服务器之后的提示信息是做什么用的</title>
    <url>/2020/04/23/%E5%85%B3%E4%BA%8Essh%E9%93%BE%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%8B%E5%90%8E%E7%9A%84%E6%8F%90%E7%A4%BA%E4%BF%A1%E6%81%AF%E6%98%AF%E5%81%9A%E4%BB%80%E4%B9%88%E7%94%A8%E7%9A%84%5Bok%5D/</url>
    <content><![CDATA[<h1 id="关于ssh链接服务器之后的提示信息是做什么用的"><a href="#关于ssh链接服务器之后的提示信息是做什么用的" class="headerlink" title="关于ssh链接服务器之后的提示信息是做什么用的"></a>关于ssh链接服务器之后的提示信息是做什么用的</h1><p><img data-src="http://nekoya.oss-cn-beijing.aliyuncs.com/blog/842nr.png" alt="image-20191009104243915"></p>
<p>如图↑</p>
<p>翻译如下↓</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">上次登录失败:10月9日星期三10:41:57 CST 2019从104.37.169.192 ssh:notty</span><br><span class="line">自上次成功登录以来，共有13次失败的登录尝试。</span><br><span class="line">最后一次登录:2019年10月9日星期三10:34:39，从111.207.253.216</span><br></pre></td></tr></table></figure>

<blockquote>
<p>第一行可以看出上次登录失败的家伙是来自哪个ip，失败的时间</p>
<p>第二行可以看出有多少次失败了</p>
<p>第三行最重要，可以看出最后一次登录的时间，如果不是正常的，则说明你的服务器可能被绿了</p>
</blockquote>
]]></content>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>配置Xcode在build时先去git pull项目的最新代码 然后 构建cocos create项目，在build</title>
    <url>/2020/04/23/%E9%85%8D%E7%BD%AEXcode%E5%9C%A8build%E6%97%B6cocos%E7%9A%84%E6%8A%80%E5%B7%A7%5Bok%5D/</url>
    <content><![CDATA[<h1 id="配置Xcode在build时先去git-pull项目的最新代码-然后-构建cocos-create项目，在build"><a href="#配置Xcode在build时先去git-pull项目的最新代码-然后-构建cocos-create项目，在build" class="headerlink" title="配置Xcode在build时先去git pull项目的最新代码 然后 构建cocos create项目，在build"></a>配置Xcode在build时先去git pull项目的最新代码 然后 构建cocos create项目，在build</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 拉取最新代码</span></span><br><span class="line">git -C 项目绝对路径 pull</span><br><span class="line"><span class="comment"># 构建而不编译项目</span></span><br><span class="line">/Applications/CocosCreator.app/Contents/MacOS/CocosCreator --path 项目绝对路径 --build <span class="string">"platform=ios;autoCompile=false;"</span></span><br></pre></td></tr></table></figure>

<p>资料:<a href="https://docs.cocos.com/creator/manual/zh/publish/publish-in-command-line.html" target="_blank" rel="noopener">https://docs.cocos.com/creator/manual/zh/publish/publish-in-command-line.html</a></p>
]]></content>
      <tags>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>策略模式实战应用</title>
    <url>/2020/04/23/%E5%85%BB%E9%B8%A1%E8%B5%9A%E6%B7%BB%E5%8A%A0%E9%B8%A1%E7%9A%84%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%5Bok%5D/</url>
    <content><![CDATA[<h1 id="策略模式实战应用"><a href="#策略模式实战应用" class="headerlink" title="策略模式实战应用"></a>策略模式实战应用</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>现在有一个接口，要求根据不同规则，更新到数据库，不同的规则已经多到需要一两百行的<code>if else</code>来判断规则。</p>
<p>这篇文章不会告诉你<strong>策略模式是什么</strong>，它只是个人的一些实战心得总结并告诉你如何运用。</p>
<h2 id="食材"><a href="#食材" class="headerlink" title="食材"></a>食材</h2><p>策略模式是个啥：</p>
<p><a href="https://www.runoob.com/design-pattern/strategy-pattern.html" target="_blank" rel="noopener">「PHP」策略模式</a></p>
<p> <a href="https://www.cnblogs.com/houdabao/p/9546871.html" target="_blank" rel="noopener"> 菜鸟教程之策略模式 </a></p>
<p> <a href="https://www.baidu.com/s?ie=UTF-8&wd=策略模式" target="_blank" rel="noopener">百度策略模式</a></p>
<h2 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h2><p>下看看都定义了那些文件吧~</p>
<p><img data-src="http://nekoya.oss-cn-beijing.aliyuncs.com/blog/vjdii.png?x-oss-process=style/shuiyin" alt="image-20191015161759250"></p>
<blockquote>
<p>敲黑板：注意啦<del>这里最重要的无非就是接口定义和用来管控的那个玩意，这两个东西一个关系着你写的策略模式的质量，弄不好还会白花时间的</del>甚至会出现一些奇奇怪怪的bug</p>
</blockquote>
<h2 id="一些要点"><a href="#一些要点" class="headerlink" title="一些要点"></a>一些要点</h2><h3 id="要做什么"><a href="#要做什么" class="headerlink" title="要做什么"></a>要做什么</h3><p>这里我需要根据<strong>id</strong>和<strong>余额</strong>的不同进行不同的<strong>逻辑</strong>，并且最重要的是判断条件太多啦！！！！而且返回的都是差不多的数据……</p>
<p>所以考虑用策略模式减少代码量……</p>
<p>太多if else真的看着很头疼！</p>
<h3 id="接口的定义"><a href="#接口的定义" class="headerlink" title="接口的定义"></a>接口的定义</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 抽象鸡算法类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ChickenStrategyAbstract</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 具体算法方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $id</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">doAction</span><span class="params">($id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>定义一个接口，所有策略都去实现它</p>
<h3 id="接口返回"><a href="#接口返回" class="headerlink" title="接口返回"></a>接口返回</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fortyEightStrategy</span> <span class="keyword">extends</span> <span class="title">ChickenStrategyAbstract</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doAction</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $num = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当为48元的时候</span></span><br><span class="line">        <span class="keyword">switch</span> ($id) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:<span class="comment">// id是1和2的鸡</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                $time = <span class="number">60</span> * <span class="number">60</span> * <span class="number">8</span>;<span class="comment">//5小时</span></span><br><span class="line"></span><br><span class="line">                $kill_egg      = <span class="number">4</span>;<span class="comment">// 鸡蛋</span></span><br><span class="line">                $land_multiple = <span class="number">5</span>;<span class="comment">//倍数</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:<span class="comment">// id是3的鸡</span></span><br><span class="line">                $time = <span class="number">60</span> * <span class="number">60</span> * <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">                $kill_egg      = <span class="number">5</span>;</span><br><span class="line">                $land_multiple = <span class="number">5</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:<span class="comment">// id是4的鸡</span></span><br><span class="line">                $time = <span class="number">60</span> * <span class="number">60</span> * <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line">                $kill_egg      = <span class="number">6</span>;</span><br><span class="line">                $land_multiple = <span class="number">5</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:<span class="comment">// id是5的鸡</span></span><br><span class="line">                $time = <span class="number">60</span> * <span class="number">60</span> * <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line">                $kill_egg      = <span class="number">8</span>;</span><br><span class="line">                $land_multiple = <span class="number">5</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> [];<span class="comment">// 已售完</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'time'</span>     =&gt; $time,</span><br><span class="line">            <span class="string">'egg'</span>      =&gt; $kill_egg,</span><br><span class="line">            <span class="string">'num'</span>      =&gt; $num,</span><br><span class="line">            <span class="string">'multiple'</span> =&gt; $land_multiple</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<blockquote>
<p>敲黑板：因为我的需求是需要用<code>$id</code>根据<strong>不同算法</strong>得到<strong>4个值</strong>所以用一个数组进行返回,并约定:如果都不符合条件则返回一个空数组。<strong>这里其实定义一个类作为model返回最好，但我偷懒了~</strong></p>
</blockquote>
<h4 id="比如这样"><a href="#比如这样" class="headerlink" title="比如这样"></a>比如这样</h4><p>再建一个文件<code>InfoModel.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InfoModel</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $time = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $egg = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $mutiple = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="返回的时候"><a href="#返回的时候" class="headerlink" title="返回的时候"></a>返回的时候</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 策略算法</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $id</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> InfoModel</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doAction</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">...</span></span><br><span class="line">$obj = new InfoModel();</span><br><span class="line">$obj-&gt;time = $time;</span><br><span class="line">$obj-&gt;egg = $kill_egg;</span><br><span class="line">$obj-&gt;num = $num;</span><br><span class="line">$obj-&gt;mutiple = $land_multiple</span><br><span class="line"><span class="keyword">return</span> $obj;</span><br></pre></td></tr></table></figure>

<h4 id="这样做的好处"><a href="#这样做的好处" class="headerlink" title="这样做的好处"></a>这样做的好处</h4><p>排除了数组的<strong>不确定性</strong>因为你取值可能是这样<code>$info[&quot;egg&quot;]</code>后面如果没有<code>egg</code>这个key你就会报错。</p>
<p>因为数组是keyvalue结构，很有可能在上面判断的时候哪一步少了一个key，或者少了一个value，导致报错。</p>
<p>或者后期可能需要多加一个条件判断，然后不好维护，每个地方都要修改数组。有一个改错调起来就很麻烦了。</p>
<h3 id="实现策略"><a href="#实现策略" class="headerlink" title="实现策略"></a>实现策略</h3><p>没什么好说了，根据自己定的规则实现里面的逻辑就行了，比如上面代码的方法体里面就是<strong>策略</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fortyEightStrategy</span> <span class="keyword">extends</span> <span class="title">ChickenStrategyAbstract</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doAction</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       	... 这里都是策略的逻辑</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'time'</span>     =&gt; $time,</span><br><span class="line">            <span class="string">'egg'</span>      =&gt; $kill_egg,</span><br><span class="line">            <span class="string">'num'</span>      =&gt; $num,</span><br><span class="line">            <span class="string">'multiple'</span> =&gt; $land_multiple</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>敲黑板：这里并不是必须只有一个<code>doAction</code>你甚至可以在<strong>接口</strong>里定义<code>doAction1</code> <code>doAction2</code> <code>doAction3</code>每个对应同一个策略的不同逻辑，一个策略可以有多个不同的逻辑去处理</p>
</blockquote>
<p>我的设计是这样的：接口定义是金额策略分别是45元的策略，46元的策略。。49元的策略，每个策略（这里的45元策略就是每个像是<code>fortyEightStrategy</code>的类）的逻辑不一样，但返回的东西一样。</p>
<h3 id="管控策略"><a href="#管控策略" class="headerlink" title="管控策略"></a>管控策略</h3><p>这里主要是对策略模式的二次封装，比如我的代码是这样的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChickenStrategyFind</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> ChickenStrategyAbstract</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">private</span> $obj = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">private</span> $small_obj = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ChickenStrategyFind constructor.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $price float 传余额</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($price)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 如果是小于45的话使用的策略</span></span><br><span class="line">        <span class="keyword">if</span> ($price &lt; <span class="number">45</span>) &#123;</span><br><span class="line">            <span class="keyword">self</span>::$small_obj = <span class="keyword">new</span> baseChickenStrategy();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 大于45的话使用的策略</span></span><br><span class="line">        <span class="keyword">switch</span> (floor($price)) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">45</span>:<span class="comment">// 45元时策略</span></span><br><span class="line">                <span class="keyword">self</span>::$obj = <span class="keyword">new</span> fortyFiveStrategy();;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">46</span>:<span class="comment">// 46元时策略</span></span><br><span class="line">                <span class="keyword">self</span>::$obj = <span class="keyword">new</span> fortySixStrategy();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">47</span>:<span class="comment">// 47元时策略</span></span><br><span class="line">                <span class="keyword">self</span>::$obj = <span class="keyword">new</span> fortySevenStrategy();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">48</span>:<span class="comment">// 48元时策略</span></span><br><span class="line">                <span class="keyword">self</span>::$obj = <span class="keyword">new</span> fortyEightStrategy();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">49</span>:<span class="comment">// 49元时策略</span></span><br><span class="line">                <span class="keyword">self</span>::$obj = <span class="keyword">new</span> fortyNineStrategy();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="comment">// 50以上元时策略</span></span><br><span class="line">                <span class="keyword">self</span>::$obj = <span class="keyword">new</span> fortyNineStrategy();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">// 获取策略的结果</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span><span class="params">($id, $count)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>::$small_obj) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>::$small_obj-&gt;doBaseAction($id, $count);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>::$obj-&gt;doAction($id);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>我是通过这个类与策略模式进行交互的，首先new一个<code>ChickenStrategyFind</code>类然后调用它的的<code>getInfo</code>方法就行</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 传入一个30元，返回策略模式计算的结果</span></span><br><span class="line">$chicken_obj = <span class="keyword">new</span> ChickenStrategyFind(<span class="number">30</span>);</span><br><span class="line">$chicken_condition = $chicken_obj-&gt;getInfo($chicken_id,$today_chicken_count);</span><br><span class="line">var_dump($chicken_condition);<span class="keyword">die</span>;</span><br></pre></td></tr></table></figure>

<h3 id="我的观点（本文最核心的地方）"><a href="#我的观点（本文最核心的地方）" class="headerlink" title="我的观点（本文最核心的地方）"></a>我的观点（本文最核心的地方）</h3><p>策略模式最重要的是定义好要对什么<strong>地方</strong>做<strong>策略</strong></p>
<p>比如：每天的<strong>某个小时</strong>提醒自己<strong>喝水</strong>，后台可能有<strong>n种方法</strong>去判断<strong>某个小时</strong>而结果只有，<strong>时间到</strong>与<strong>时间没到</strong>，中间的<strong>n种方法</strong>就是策略每个方法是一种策略</p>
<p>想明白为什么这里可以用策略模式，能得到什么好处。</p>
<p>如果用一个设计模式都不知道能带来什么的话~</p>
<p>还是别用了吧……</p>
]]></content>
  </entry>
  <entry>
    <title>ios 13 present vc 出模态状态的问题</title>
    <url>/2020/04/23/iOS%2013%20present%20%E9%97%AE%E9%A2%98%5Bok%5D/</url>
    <content><![CDATA[<h2 id="present-vc-之后"><a href="#present-vc-之后" class="headerlink" title="present(vc) 之后"></a>present(vc) 之后</h2><p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-03-17-074911.png?x-oss-process=style/shuiyin" alt="image-20200317154909698"></p>
<p>网上查90的博客都是一句话就完事了，不告诉你加在哪。</p>
<a id="more"></a>

<p><code>vc.modalPresentationStyle = .fullScreen</code></p>
<p>这样没问题，真的相信我。</p>
<p>你们加上了还是没有效果的原因是因为你们是可能是这样用的</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 假设这里self是A页面</span></span><br><span class="line"><span class="keyword">self</span>.view.modalPresentationStyle = .fullScreen</span><br><span class="line"><span class="keyword">let</span> vc = <span class="type">BPageController</span>()</span><br><span class="line"><span class="keyword">self</span>.present(vc, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br></pre></td></tr></table></figure>

<p>可能是这样用的</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// b页面里的代码</span></span><br><span class="line"><span class="keyword">self</span>.view.modalPresentationStyle = .fullScreen</span><br></pre></td></tr></table></figure>

<p>可能是两边都加</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 假设这里self是A页面</span></span><br><span class="line"><span class="keyword">self</span>.view.modalPresentationStyle = .fullScreen</span><br><span class="line"><span class="keyword">let</span> vc = <span class="type">BPageController</span>()</span><br><span class="line"><span class="keyword">self</span>.present(vc, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// b页面里的代码</span></span><br><span class="line"><span class="keyword">self</span>.view.modalPresentationStyle = .fullScreen</span><br></pre></td></tr></table></figure>

<blockquote>
<p> 但这样都是<strong>不行的</strong>因为我试过……</p>
</blockquote>
<p>但正确做法是这样</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 假设这里self是A页面</span></span><br><span class="line"><span class="keyword">let</span> vc = <span class="type">BPageController</span>()</span><br><span class="line">vc.modalPresentationStyle = .fullScreen</span><br><span class="line"><span class="keyword">self</span>.present(vc, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br></pre></td></tr></table></figure>



<p><img data-src="https://nekoya.oss-cn-beijing.aliyuncs.com/blog/2020-03-17-075658.png?x-oss-process=style/shuiyin" alt="image-20200317155657412"></p>
]]></content>
  </entry>
</search>
